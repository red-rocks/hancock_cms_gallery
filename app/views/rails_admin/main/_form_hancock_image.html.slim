- if field.jcrop_options.is_a?(Hash)
  - rails_admin_jcrop_options = field.jcrop_options.to_json
- else
  - _method = field.jcrop_options.to_sym
  - if form.object.respond_to?(_method)
    - rails_admin_jcrop_options = form.object.send(field.jcrop_options.to_sym).to_json
  - else
    - rails_admin_jcrop_options = {}

= stylesheet_link_tag 'rails_admin/jquery.Jcrop'
= stylesheet_link_tag 'rails_admin/ra.jcrop'
= javascript_include_tag 'rails_admin/jquery.Jcrop'
= javascript_include_tag 'rails_admin/ra.jcrop'

- file = form.object.send(field.method_name).presence

- _add_class = (field.pretty_value and !field.svg? ? "jcrop_data_value" : "")
.toggle{class="#{_add_class}" style=('display:none;' if file and field.delete_method and form.object.send(field.delete_method) == '1')}
  - if value = field.pretty_value
    .preview
      .image_block
        - unless field.svg?
          button{class="crop-btn" title="Обрезать"}
            i.fa.fa-crop
        = value
  = form.file_field(field.name, field.html_attributes.reverse_merge({data: {fileupload: true, rails_admin_jcrop_options: rails_admin_jcrop_options } }))
  
  - unless field.svg?
    - model_name = form.object.class.to_param.gsub("::", "~").underscore
    - url = jcrop_path(model_name: model_name, modal: true, id: form.object.id, field: field.name, fit_image: field.fit_image)
    - link_data = {link: url, thumb: field.thumb_method || "original"}
    = link_to 'Edit Image', '#', data: link_data, style: 'display:none', class: "jcrop_handle"

    - if field.try(:process_watermark_toggler)
      label{style='display: block;'}
        - _html_attributes = {checked: field.process_watermark_default, class: 'form-control'}
        span{style='float: left'}= form.check_box field.process_watermark_toggler_method, _html_attributes
        div{style='margin-left: 35px; line-height: 40px;'} Добавлять водяной знак?
      
      
- if field.perform_autocrop_method
  label.autocrop-label
    - _crop_params = form.object.send("#{field.name}_style_for_autocrop")
    = _crop_params.blank? ? "Автоматическая обрезка" : "Автоматическая обрезка (#{_crop_params})"

    - _html_attributes = {class: 'form-control', checked: field.perform_autocrop_default}
    = form.check_box field.perform_autocrop_method, _html_attributes, "0", "1"
      
- if field.show_urls and file and !file.blank?
  .urls_list_block
    = link_to 'Текущие ссылки', "#",class: "urls_toggler", onclick: "$(this).siblings('.url_block').toggleClass('hidden'); return false;"
    - unless field.process_watermark_toggler
      .url_block.hidden
        span = "original: "
        = file.url(:original, false)
    - file.styles.each do |s_name, s_def|
      .url_block.hidden
        span = "#{s_name}(#{s_def.geometry}): "
        = file.url(s_name, false)

- if field.optional? and field.errors.blank? and file and field.delete_method
  - onclick = "$(this).siblings('[type=checkbox]').click(); $(this).siblings('.toggle').toggle('slow'); jQuery(this).toggleClass('btn-danger btn-info'); return false;"

  = link_to "#", data: {toggle:'button'}, onclick: onclick, class: "btn btn-info" do
    i.icon-white.icon-trash
    = "#{I18n.t('admin.actions.delete.menu').capitalize} #{field.method_name}"

  = form.check_box field.delete_method, style: 'display:none;'

- if field.cache_method
  = form.hidden_field field.cache_method
